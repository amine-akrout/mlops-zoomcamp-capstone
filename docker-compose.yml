version: "3.6"
services:
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ':9001'
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - 9001:9001
    networks:
      - ml-net
    volumes:
      - ./data/minio-data:/data

  # mc:
  #   container_name: mc
  #   image: minio/mc
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c "
  #     /usr/bin/mc alias set myminio http://minio:${MINIO_PORT} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
  #     /usr/bin/mc mb myminio/${DATA_BUCKET} &&
  #     /usr/bin/mc policy set public myminio/${DATA_BUCKET} &&
  #     /usr/bin/mc mb myminio/${MLFLOW_BUCKET} &&
  #     /usr/bin/mc policy set public myminio/${MLFLOW_BUCKET} &&
  #     exit 0
  #     "
  #   networks:
  #     - ml-net

  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: mlflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:${MINIO_PORT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_SERVER_DEFAULT_ARTIFACT_ROOT: s3://${MLFLOW_BUCKET}
      MLFLOW_SERVER_HOST: ${MLFLOW_SERVER_HOST}
      MLFLOW_SERVER_PORT: ${MLFLOW_SERVER_PORT}
    ports:
      - ${MLFLOW_SERVER_PORT}:${MLFLOW_SERVER_PORT}
    networks:
      - ml-net
    depends_on:
      - minio
      - mlflow_db
    entrypoint: >
      /bin/sh -c "
      pip install pymysql boto3  PyMySQL[rsa] && \
      mlflow server \
      --backend-store-uri  mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mlflow_db:3306/${MYSQL_DATABASE} \
      --default-artifact-root s3://${MLFLOW_BUCKET} \
      --host ${MLFLOW_SERVER_HOST}
      "
  mlflow_db:
    restart: always
    image: mysql/mysql-server:8.0.32
    container_name: mlflow_db
    ports:
      - 3307:3306
    expose:
      - 3307
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mlflow_db_volume:/var/lib/mysql
    networks:
      - ml-net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mlflow_db
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - "8081:80"
    networks:
      - ml-net

  fastapi-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: fastapi
    restart: always
    ports:
      - 8000:8000
    networks:
      - ml-net
    depends_on:
      - mlflow
      - mongo
    environment:
      - MLFLOW_SERVER_HOST=${MLFLOW_SERVER_HOST}
      - MLFLOW_SERVER_PORT=${MLFLOW_SERVER_PORT}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:${MINIO_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_BUCKET=${MLFLOW_BUCKET}
      - DATA_BUCKET=${DATA_BUCKET}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - ml-net
    volumes:
      - ./data/mongo-data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8082:8081
    networks:
      - ml-net
    depends_on:
      - mongo
  prefect_server:
    container_name: prefect-server
    image: prefecthq/prefect:2.11.0-python3.9
    restart: always
    entrypoint: ["prefect", "server", "start"]
    environment:
      - PREFECT_UI_URL=http://127.0.0.0:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
    ports:
      - 4200:4200
    networks:
      - ml-net
  # Prefect agent
  agent:
    container_name: agent
    build: ./training
    restart: always
    entrypoint: ["prefect", "agent", "start", "-q", "default"]
    environment:
      - PREFECT_API_URL=http://prefect_server:4200/api
    depends_on:
      prefect_server:
        condition: service_started
    working_dir: "/root/training"
    volumes:
      - ./training:/root/training
    networks:
      - ml-net

  prefect_deploy:
    container_name: prefect-deploy
    build: ./training
    restart: on-failure
    environment:
      - PREFECT_API_URL=http://prefect_server:4200/api
    depends_on:
      mlflow:
        condition: service_started
      agent:
        condition: service_started
      prefect_server:
        condition: service_started
    working_dir: "/root/training"
    volumes:
      - ./training:/root/training
    networks:
      - ml-net

volumes:
  cache:
    driver: local
  minio-data:
    driver: local
  mlflow_db_volume:
    driver: local
  mongo-data:
    driver: local
networks:
  ml-net:
    driver: bridge
