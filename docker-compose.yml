version: '3.6'
services:
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ':9001'
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - 9001:9001
    networks:
      - ml-net
    volumes:
      - ./data/minio-data:/data
  mc:
    container_name: mc
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:${MINIO_PORT} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
      /usr/bin/mc mb myminio/${DATA_BUCKET} &&
      /usr/bin/mc policy set public myminio/${DATA_BUCKET} &&
      /usr/bin/mc mb myminio/${MLFLOW_BUCKET} &&
      /usr/bin/mc policy set public myminio/${MLFLOW_BUCKET} &&
      exit 0
      "
    networks:
      - ml-net
  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: mlflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:${MINIO_PORT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_SERVER_DEFAULT_ARTIFACT_ROOT: s3://${MLFLOW_BUCKET}
      MLFLOW_SERVER_HOST: ${MLFLOW_SERVER_HOST}
      MLFLOW_SERVER_PORT: ${MLFLOW_SERVER_PORT}
    ports:
      - ${MLFLOW_SERVER_PORT}:${MLFLOW_SERVER_PORT}
    networks:
      - ml-net
    entrypoint: >
      /bin/sh -c "
      mlflow server \
      --backend-store-uri sqlite:///mlflow.db \
      --default-artifact-root s3://${MLFLOW_BUCKET} \
      --host ${MLFLOW_SERVER_HOST}
      "
  # postgres:
  #   image: postgres:13.3
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   volumes:
  #     - ./data/postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - ml-net
volumes:
  cache:
    driver: local
  minio-data:
    driver: local
networks:
  ml-net:
    driver: bridge
